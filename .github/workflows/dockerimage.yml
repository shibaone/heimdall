name: Docker Image CI

on:
  push:
    tags:
      - 'v*.*.*'
      # to be used by fork patch-releases ^^
      - 'v*.*.*-*'
      
env:
  SHIBARIUM_REGION: us-east-1
  PUPPYNET_REGION: us-east-1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Check Deployment Environment
      id: check_deployment_environment
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        if [[ ${{github.ref}} == *"beta"* ]]; then
          DEPLOYMENT_ENV="puppynet"
        else
          DEPLOYMENT_ENV="shibarium"
        fi
        echo "::set-output name=deploymentEnv::$DEPLOYMENT_ENV"

    - name: Configure Prod Enviroment & AWS Credentials
      if: success() && steps.check_deployment_environment.outputs.deploymentEnv=='shibarium'
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-access-key-id: ${{ secrets.AWS_SHIBARIUM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SHIBARIUM_SECRET_KEY_ID }}
          aws-region: ${{ env.SHIBARIUM_REGION }}

    - name: Configure Dev Enviroment & AWS Credentials
      if: success() && steps.check_deployment_environment.outputs.deploymentEnv=='puppynet'
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-access-key-id: ${{ secrets.AWS_PUPPYNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PUPPYNET_SECRET_KEY_ID }}
          aws-region: ${{ env.PUPPYNET_REGION }}

    - name: Login to Amazon ECR
      if: startsWith(github.ref, 'refs/tags/v')
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Push image to Amazon ECR
      if: startsWith(github.ref , 'refs/tags/v')
      env:
        ECR_REGISTRY: "${{ steps.login-ecr.outputs.registry }}"
        ECR_REPOSITORY: heimdall
        IMAGE_TAG: "${{  github.ref_name }}"
      run: |
        docker build -f Dockerfile.deprecated -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
